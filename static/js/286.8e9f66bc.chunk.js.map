{"version":3,"file":"static/js/286.8e9f66bc.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.jsx","components/DepartmentsForm/DepartmentsForm.styled.jsx","components/DepartmentsForm/DepartmentsForm.jsx","components/DepartmentsListResult/DepartmentsListResult.styled.jsx","components/DepartmentsListResult/DepartmentsListResult.jsx","pages/DepartmentList/DepartmentList.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Spinner = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: invert(15%);\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { Spinner } from 'components/Loader/Loader.styled';\nexport const Loader = () => {\n  return (\n    <Spinner>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#ae0000\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Spinner>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 20px;\n\n  @media screen and (min-width: 900px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: flex-start;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  min-height: 74px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const InputEl = styled(Field)`\n  font-size: 16px;\n  width: 250px;\n  height: 20px;\n  padding: 5px;\n  border-radius: 5px;\n  outline-color: #bb3d3d;\n  border-color: #ab0a0a;\n  font-weight: 700;\n  outline: none;\n\n  @media screen and (min-width: 900px) {\n    height: 26px;\n    margin-bottom: 4px;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #5d5e5e;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 700;\n  cursor: pointer;\n  color: #ffffff;\n\n  padding: 5px;\n  transition: all 0.3s linear;\n\n  &:hover,\n  &:focus {\n    background-color: #b11b1b;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nexport const InfoError = styled.div`\n  width: 300px;\n  text-align: center;\n\n  margin-bottom: 1px;\n  font-weight: 500;\n  font-size: 12px;\n  color: ${props => {\n    return props.error ? 'red' : 'transparent';\n  }};\n`;\n","import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const InputEl = styled(Field)`\n  font-size: 16px;\n  width: 250px;\n  height: 20px;\n  padding: 5px;\n  border-radius: 5px;\n  outline-color: #bb3d3d;\n  border-color: #ab0a0a;\n  font-weight: 700;\n  outline: none;\n\n  @media screen and (min-width: 900px) {\n    height: 26px;\n    margin-right: 20px;\n    margin-bottom: 4px;\n  }\n`;\n\nexport const ErrorMessageDepartment = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n  font-weight: 500;\n  font-size: 12px;\n`;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as yup from 'yup';\n\nimport { fetchDepartments } from 'redux/operations';\n\nimport {\n  FormEl,\n  SubmitButton,\n  InputWrapper,\n} from 'components/SearchForm/SearchForm.styled';\n\nimport {\n  InputEl,\n  ErrorMessageDepartment,\n} from 'components/DepartmentsForm/DepartmentsForm.styled';\nimport { selectCity, selectPage } from 'redux/selectors';\nimport { clearDepartmentsList, updateCity } from 'redux/slice';\nimport { useEffect } from 'react';\n\nconst schema = yup.object().shape({\n  cityName: yup\n    .string()\n    .min(3, 'Мінімум 3 символа')\n    .max(30, 'Максимум 25 символів')\n    .matches(\n      /^[А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']*(-[А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']+)*( [А-ЩЬЮЯҐЄІЇ][а-щьюяґєії']+)*$/,\n      'Введіть назву літерами українського алфавіту з великої букви'\n    )\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n\nconst initialValues = {\n  cityName: '',\n};\n\nexport const DepartmentsForm = () => {\n  const dispatch = useDispatch();\n  const page = useSelector(selectPage);\n  const city = useSelector(selectCity);\n\n  useEffect(() => {\n    if (city) {\n      dispatch(fetchDepartments({ city, page }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [city, page]);\n\n  useEffect(() => {\n    return () => {\n      dispatch(updateCity(''));\n      dispatch(clearDepartmentsList());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = values => {\n    dispatch(updateCity(values.cityName));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl>\n        <InputWrapper>\n          <InputEl\n            type=\"text\"\n            name=\"cityName\"\n            placeholder=\"Введіть назву міста\"\n          />\n          <ErrorMessageDepartment name=\"cityName\" component=\"div\" />\n        </InputWrapper>\n        <SubmitButton type=\"submit\">Шукати відділення</SubmitButton>\n      </FormEl>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const DepartmentListHeader = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  text-align: center;\n  border-radius: 5px;\n  text-align: center;\n  padding-top: 20px;\n`;\n\nexport const DepartmentList = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  flex-wrap: wrap;\n  padding: 0;\n`;\n\nexport const DepartmentListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  width: 130px;\n  height: 250px;\n  border: 1px solid #cc0101;\n  padding: 5px;\n\n  text-align: center;\n  border-radius: 5px;\n  margin: 5px;\n\n  font-size: 12px;\n  font-weight: 500;\n  background-color: #fff;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 900px) {\n    margin: 15px;\n    width: 200px;\n    height: 350px;\n  }\n`;\n\nexport const DescriptionCityItem = styled.div`\n  font-size: 14px;\n  margin-bottom: 5px;\n  color: #8b0000;\n\n  @media screen and (min-width: 900px) {\n    font-size: 20px;\n  }\n`;\n\nexport const DescriptionItem = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 80px;\n  border: 1px solid #cc0101;\n  border-radius: 10px;\n  margin-bottom: 5px;\n  padding: 5px;\n  @media screen and (min-width: 900px) {\n    font-size: 16px;\n    margin-bottom: 10px;\n    padding: 10px;\n    height: 100px;\n  }\n`;\n\nexport const ScheduleItem = styled.div`\n  font-size: 12px;\n  font-weight: 500;\n  @media screen and (min-width: 900px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ScheduleHeader = styled.div`\n  font-size: 14px;\n  margin-bottom: 5px;\n  color: #8b0000;\n  @media screen and (min-width: 900px) {\n    font-size: 20px;\n  }\n`;\n\nexport const LoadMoreButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #5d5e5e;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 700;\n  cursor: pointer;\n\n  transition: all 0.3s linear;\n\n  &:hover,\n  &:focus {\n    background-color: #b11b1b;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectDepartmentsList,\n  selectDepartmentsError,\n  selectPage,\n  selectTotalCount,\n} from 'redux/selectors';\n\nimport {\n  DepartmentListHeader,\n  DepartmentList,\n  DepartmentListItem,\n  DescriptionItem,\n  ScheduleItem,\n  DescriptionCityItem,\n  ScheduleHeader,\n  LoadMoreButton,\n  ButtonWrapper,\n} from 'components/DepartmentsListResult/DepartmentsListResult.styled';\nimport { updatePage } from 'redux/slice';\n\nexport const DepartmentsListResult = () => {\n  const listOfDepartments = useSelector(selectDepartmentsList);\n  const departmentsError = useSelector(selectDepartmentsError);\n\n  const dispatch = useDispatch();\n\n  const page = useSelector(selectPage);\n  const totalCount = useSelector(selectTotalCount);\n\n  const onLoadMore = () => {\n    dispatch(updatePage(page + 1));\n  };\n  return (\n    <ButtonWrapper>\n      {departmentsError ? (\n        <DepartmentListHeader>Такого міста немає у списку</DepartmentListHeader>\n      ) : (\n        <DepartmentList>\n          {listOfDepartments.map(item => (\n            <DepartmentListItem key={nanoid()}>\n              <DescriptionCityItem>{item.CityDescription}</DescriptionCityItem>\n              <DescriptionItem>{item.Description}</DescriptionItem>\n              <ScheduleHeader>Розклад роботи</ScheduleHeader>\n              <ScheduleItem>Пн {item.Schedule.Monday}</ScheduleItem>\n              <ScheduleItem>Вт {item.Schedule.Tuesday}</ScheduleItem>\n              <ScheduleItem>Ср {item.Schedule.Wednesday}</ScheduleItem>\n              <ScheduleItem>Чт {item.Schedule.Thursday}</ScheduleItem>\n              <ScheduleItem>Пт {item.Schedule.Friday}</ScheduleItem>\n              <ScheduleItem>Сб {item.Schedule.Saturday}</ScheduleItem>\n              <ScheduleItem>Вс {item.Schedule.Sunday}</ScheduleItem>\n            </DepartmentListItem>\n          ))}\n        </DepartmentList>\n      )}\n      {totalCount !== listOfDepartments.length &&\n        !!listOfDepartments.length && (\n          <div>\n            <LoadMoreButton type=\"submit\" onClick={onLoadMore}>\n              Більше відділень\n            </LoadMoreButton>\n          </div>\n        )}\n    </ButtonWrapper>\n  );\n};\n","import { DepartmentsForm } from 'components/DepartmentsForm/DepartmentsForm';\nimport { DepartmentsListResult } from 'components/DepartmentsListResult/DepartmentsListResult';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoading } from 'redux/selectors';\n\nexport default function DepartmentList() {\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <>\n      <DepartmentsForm />\n      {isLoading ? <Loader /> : <DepartmentsListResult />}\n    </>\n  );\n}\n","export const selectInfo = state => state.info.ttnInfo;\n\nexport const selectError = state => state.info.infoError;\n\nexport const selectNumbersList = state => state.info.ttnNumbersList;\n\nexport const selectSelectedNumber = state => state.info.selectedNumber;\n\nexport const selectDepartmentsList = state => state.info.departmentsList;\n\nexport const selectDepartmentsError = state => state.info.departmentsError;\n\nexport const selectPage = state => state.info.page;\n\nexport const selectCity = state => state.info.city;\n\nexport const selectTotalCount = state => state.info.totalCount;\n\nexport const selectIsLoading = state => state.info.isLoading;\n"],"names":["Spinner","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","FormEl","Form","InputWrapper","InputEl","Field","SubmitButton","Error","ErrorMessage","InfoError","props","error","ErrorMessageDepartment","schema","yup","shape","cityName","min","max","matches","required","initialValues","DepartmentsForm","dispatch","useDispatch","page","useSelector","selectPage","city","selectCity","useEffect","fetchDepartments","updateCity","clearDepartmentsList","validationSchema","onSubmit","values","type","name","placeholder","component","DepartmentListHeader","DepartmentList","DepartmentListItem","DescriptionCityItem","DescriptionItem","ScheduleItem","ScheduleHeader","LoadMoreButton","ButtonWrapper","DepartmentsListResult","listOfDepartments","selectDepartmentsList","departmentsError","selectDepartmentsError","totalCount","selectTotalCount","map","item","CityDescription","Description","Schedule","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","nanoid","length","onClick","updatePage","isLoading","selectIsLoading","selectInfo","state","info","ttnInfo","selectError","infoError","selectNumbersList","ttnNumbersList","selectSelectedNumber","selectedNumber","departmentsList"],"sourceRoot":""}