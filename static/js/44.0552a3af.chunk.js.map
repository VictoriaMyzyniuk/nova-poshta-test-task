{"version":3,"file":"static/js/44.0552a3af.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.jsx","components/InfoCard/InfoCard.styled.jsx","components/InfoCard/InfoCard.jsx","components/RequestHistory/RequestHistory.styled.jsx","components/RequestHistory/RequestHistory.jsx","components/SearchForm/SearchForm.jsx","pages/CheckTtn/CheckTtn.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const InputEl = styled(Field)`\n  font-size: 16px;\n  width: 250px;\n  height: 20px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  padding: 5px;\n  border-radius: 5px;\n  outline-color: #5edcb0;\n  border-color: #0aab7e;\n  font-weight: 700;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  margin-bottom: 5px;\n  color: #057858;\n`;\n\nexport const SubmitButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #39bb96;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: pointer;\n  outline-color: #504e4e;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n  margin-bottom: 15px;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import styled from '@emotion/styled';\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 15px;\n\n  width: 100%;\n`;\n\nexport const InfoEl = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  width: 280px;\n  height: 80px;\n  font-weight: 700;\n  color: #051f75;\n  font-size: 16px;\n  background-color: #16a3a3;\n  border-radius: 10px;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 2px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const InfoElContent = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  color: black;\n  padding: 2px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectInfo } from 'redux/selectors';\n\nimport {\n  InfoWrapper,\n  InfoEl,\n  InfoElContent,\n} from 'components/InfoCard/InfoCard.styled';\n\nexport const InfoCard = () => {\n  const cargoInfo = useSelector(selectInfo);\n  const {\n    Status,\n    StatusCode,\n    WarehouseRecipient,\n    WarehouseSender,\n    CitySender,\n    CityRecipient,\n  } = cargoInfo;\n  return (\n    <InfoWrapper>\n      <InfoEl>\n        Статус доставки:\n        {StatusCode === '3' ? (\n          <InfoEl>\n            Номер ТТН не знайдено. Перевірте номер та спробуйте ще раз\n          </InfoEl>\n        ) : (\n          <InfoElContent>{Status}</InfoElContent>\n        )}\n      </InfoEl>\n      <InfoEl>\n        Відправлено:\n        <InfoElContent>\n          {WarehouseSender}\n          <br />\n          Населений пункт: {CitySender}\n        </InfoElContent>\n      </InfoEl>\n      <InfoEl>\n        Отримано:\n        <InfoElContent>\n          {WarehouseRecipient}\n          <br />\n          Населений пункт: {CityRecipient}\n        </InfoElContent>\n      </InfoEl>\n    </InfoWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n`;\n\nexport const ListHeader = styled.div`\n  width: 150px;\n  font-size: 16px;\n  font-weight: 700;\n  /* background-color: #1bad84;\n  padding: 5px; */\n  text-align: center;\n  border-radius: 5px;\n`;\n\nexport const ListEl = styled.ul`\n  /* display: flex;\n  align-items: center;\n  justify-content: center; */\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 180px;\n  border: 1px solid #39bb96;\n  padding: 5px;\n  text-align: center;\n  border-radius: 5px;\n  margin-bottom: 5px;\n\n  background-color: #ccf9ef;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ClearButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #39bb96;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 700;\n  cursor: pointer;\n  outline-color: #504e4e;\n`;\n","import {\n  updateSelectedNumber,\n  // deleteSelectedNumber,\n  clearRequestHistory,\n} from 'redux/slice';\nimport { selectNumbersList } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchInfo } from 'redux/operations';\nimport { nanoid } from 'nanoid';\n\nimport {\n  ListWrapper,\n  ListHeader,\n  ListEl,\n  ListItem,\n  ClearButton,\n} from 'components/RequestHistory/RequestHistory.styled';\n\nexport const RequestHistory = () => {\n  const requestHistory = useSelector(selectNumbersList);\n\n  const dispatch = useDispatch();\n\n  // const deleteNumber = item => {\n  //   dispatch(deleteSelectedNumber(item));\n  // };\n\n  const clearHistory = () => {\n    dispatch(clearRequestHistory());\n  };\n\n  const handleClick = clickedNumber => {\n    dispatch(updateSelectedNumber(clickedNumber));\n\n    dispatch(fetchInfo(clickedNumber));\n  };\n  return (\n    <ListWrapper>\n      <ListHeader>Історія пошуку</ListHeader>\n      <ListEl>\n        {requestHistory.map(item => {\n          return (\n            <ListItem key={nanoid()}>\n              <div\n                onClick={() => {\n                  handleClick(item);\n                }}\n              >\n                {item}\n              </div>\n\n              {/* <button\n              type=\"button\"\n              onClick={() => {\n                deleteNumber(item);\n              }}\n            >\n              X\n            </button> */}\n            </ListItem>\n          );\n        })}\n      </ListEl>\n      {requestHistory.length !== 0 && (\n        <ClearButton\n          type=\"button\"\n          onClick={() => {\n            clearHistory();\n          }}\n        >\n          Очистити історію\n        </ClearButton>\n      )}\n    </ListWrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchInfo } from 'redux/operations';\nimport { selectError, selectSelectedNumber } from 'redux/selectors';\n\nimport { Formik, useFormikContext } from 'formik';\n\nimport {\n  FormEl,\n  InputEl,\n  SubmitButton,\n  Error,\n} from 'components/SearchForm/SearchForm.styled';\n\nimport * as yup from 'yup';\nimport { useEffect } from 'react';\n\nconst schema = yup.object().shape({\n  ttnNumber: yup\n    .string()\n    .matches(/^\\d{14}$/, 'Введіть 14 цифр')\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n\nconst initialValues = {\n  ttnNumber: '',\n};\n\nconst TtnInput = () => {\n  const { setFieldValue } = useFormikContext();\n\n  const ttnSelectedNumber = useSelector(selectSelectedNumber);\n\n  useEffect(() => {\n    setFieldValue('ttnNumber', ttnSelectedNumber);\n  }, [ttnSelectedNumber, setFieldValue]);\n\n  return (\n    <>\n      <InputEl type=\"text\" name=\"ttnNumber\" placeholder=\"Введіть номер ТТН\" />\n      <Error name=\"ttnNumber\" component=\"div\" />\n    </>\n  );\n};\n\nexport const SearchForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  const handleSubmit = values => {\n    dispatch(fetchInfo(values.ttnNumber));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl>\n        <TtnInput />\n        {error && <div>Невірний номер ТТН</div>}\n        <SubmitButton type=\"submit\">Отримати статус ТТН</SubmitButton>\n      </FormEl>\n    </Formik>\n  );\n};\n","import { InfoCard } from 'components/InfoCard/InfoCard';\nimport { RequestHistory } from 'components/RequestHistory/RequestHistory';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nexport default function CheckTtn() {\n  return (\n    <>\n      <SearchForm />\n      <InfoCard />\n      <RequestHistory />\n    </>\n  );\n}\n","export const selectInfo = state => state.info.ttnInfo;\n\nexport const selectError = state => state.info.infoError;\n\nexport const selectNumbersList = state => state.info.ttnNumbersList;\n\nexport const selectSelectedNumber = state => state.info.selectedNumber;\n\nexport const selectDepartmentsList = state => state.info.departmentsList;\n\nexport const selectDepartmentsError = state => state.info.departmentsError;\n"],"names":["FormEl","styled","Form","InputEl","Field","SubmitButton","Error","ErrorMessage","InfoWrapper","InfoEl","InfoElContent","InfoCard","cargoInfo","useSelector","selectInfo","Status","StatusCode","WarehouseRecipient","WarehouseSender","CitySender","CityRecipient","ListWrapper","ListHeader","ListEl","ListItem","ClearButton","RequestHistory","requestHistory","selectNumbersList","dispatch","useDispatch","map","item","onClick","clickedNumber","updateSelectedNumber","fetchInfo","nanoid","length","type","clearRequestHistory","schema","yup","shape","ttnNumber","matches","required","initialValues","TtnInput","setFieldValue","useFormikContext","ttnSelectedNumber","selectSelectedNumber","useEffect","name","placeholder","component","SearchForm","error","selectError","validationSchema","onSubmit","values","CheckTtn","state","info","ttnInfo","infoError","ttnNumbersList","selectedNumber","selectDepartmentsList","departmentsList","selectDepartmentsError","departmentsError"],"sourceRoot":""}