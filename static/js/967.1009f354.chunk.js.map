{"version":3,"file":"static/js/967.1009f354.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/SearchForm/SearchForm.styled.jsx","components/InfoCard/InfoCard.styled.jsx","components/InfoCard/InfoCard.jsx","components/RequestHistory/RequestHistory.styled.jsx","components/RequestHistory/RequestHistory.jsx","components/SearchForm/SearchForm.jsx","pages/CheckTtn/CheckTtn.styled.jsx","pages/CheckTtn/CheckTtn.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Spinner = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: invert(15%);\n`;\n","import { Circles } from 'react-loader-spinner';\nimport { Spinner } from 'components/Loader/Loader.styled';\nexport const Loader = () => {\n  return (\n    <Spinner>\n      <Circles\n        height=\"80\"\n        width=\"80\"\n        color=\"#ae0000\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </Spinner>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormEl = styled(Form)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 20px;\n\n  @media screen and (min-width: 900px) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: flex-start;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  min-height: 74px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const InputEl = styled(Field)`\n  font-size: 16px;\n  width: 250px;\n  height: 20px;\n  padding: 5px;\n  border-radius: 5px;\n  outline-color: #bb3d3d;\n  border-color: #ab0a0a;\n  font-weight: 700;\n  outline: none;\n\n  @media screen and (min-width: 900px) {\n    height: 26px;\n    margin-bottom: 4px;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #5d5e5e;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 700;\n  cursor: pointer;\n  color: #ffffff;\n\n  padding: 5px;\n  transition: all 0.3s linear;\n\n  &:hover,\n  &:focus {\n    background-color: #b11b1b;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nexport const InfoError = styled.div`\n  width: 300px;\n  text-align: center;\n\n  margin-bottom: 1px;\n  font-weight: 500;\n  font-size: 12px;\n  color: ${props => {\n    return props.error ? 'red' : 'transparent';\n  }};\n`;\n","import styled from '@emotion/styled';\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 25px;\n\n  @media screen and (min-width: 900px) {\n    align-items: flex-start;\n    margin-top: 0;\n  }\n`;\n\nexport const InfoEl = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  width: 280px;\n  height: 80px;\n  font-weight: 700;\n  color: #cccccc;\n  font-size: 16px;\n  border-radius: 10px;\n  text-align: center;\n  margin-bottom: 10px;\n  padding: 5px;\n  background: linear-gradient(180deg, #cb0000, #fff);\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100%;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 900px) {\n    width: 450px;\n    height: 120px;\n    font-size: 20px;\n    margin-bottom: 20px;\n    padding: 10px;\n  }\n`;\n\nexport const InfoElContent = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  color: black;\n  padding: 2px;\n\n  @media screen and (min-width: 900px) {\n    font-size: 16px;\n    padding: 10px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectInfo } from 'redux/selectors';\n\nimport {\n  InfoWrapper,\n  InfoEl,\n  InfoElContent,\n} from 'components/InfoCard/InfoCard.styled';\n\nexport const InfoCard = () => {\n  const cargoInfo = useSelector(selectInfo);\n\n  const {\n    Status,\n    StatusCode,\n    WarehouseRecipient,\n    WarehouseSender,\n    CitySender,\n    CityRecipient,\n  } = cargoInfo;\n  return (\n    <InfoWrapper>\n      <InfoEl>\n        Статус доставки:\n        {StatusCode === '3' ? (\n          <InfoElContent>\n            Номер ТТН не знайдено. Перевірте номер та спробуйте ще раз\n          </InfoElContent>\n        ) : (\n          <InfoElContent>{Status}</InfoElContent>\n        )}\n      </InfoEl>\n      <InfoEl>\n        Відправлено:\n        <InfoElContent>\n          {WarehouseSender}\n          <br />\n          Населений пункт: {CitySender}\n        </InfoElContent>\n      </InfoEl>\n      <InfoEl>\n        Отримано:\n        <InfoElContent>\n          {WarehouseRecipient}\n          <br />\n          Населений пункт: {CityRecipient}\n        </InfoElContent>\n      </InfoEl>\n    </InfoWrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n\n  @media screen and (min-width: 900px) {\n    margin-left: 70px;\n    padding-top: 0;\n    justify-content: flex-start;\n  }\n`;\n\nexport const ListHeader = styled.div`\n  width: 150px;\n  font-size: 16px;\n  font-weight: 700;\n  text-align: center;\n  border-radius: 5px;\n\n  @media screen and (min-width: 900px) {\n    font-size: 20px;\n  }\n`;\n\nexport const ListEl = styled.ul`\n  list-style: none;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n  height: 175px;\n\n  overflow-y: ${props => {\n    return props.requestHistory.length > 5 ? 'scroll' : 'hidden';\n  }};\n  @media screen and (min-width: 900px) {\n    height: 315px;\n    overflow-y: ${props => {\n      return props.requestHistory.length > 9 ? 'scroll' : 'hidden';\n    }};\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 180px;\n  border: 1px solid #ff0000;\n  padding: 5px;\n  text-align: center;\n  border-radius: 5px;\n  margin-bottom: 5px;\n  font-weight: 500;\n\n  background-color: #ab0a0a1f;\n  cursor: pointer;\n  transition: all 0.3s linear;\n\n  &:hover {\n    background-color: #fff;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ClearButton = styled.button`\n  width: 150px;\n  height: 40px;\n  background-color: #5d5e5e;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 700;\n  cursor: pointer;\n  color: #fff;\n\n  transition: all 0.3s linear;\n\n  &:hover,\n  &:focus {\n    background-color: #fff;\n  }\n`;\n","import { updateSelectedNumber, clearRequestHistory } from 'redux/slice';\nimport { selectNumbersList } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchInfo } from 'redux/operations';\nimport { nanoid } from 'nanoid';\n\nimport {\n  ListWrapper,\n  ListHeader,\n  ListEl,\n  ListItem,\n  ClearButton,\n} from 'components/RequestHistory/RequestHistory.styled';\n\nexport const RequestHistory = () => {\n  const requestHistory = useSelector(selectNumbersList);\n\n  const dispatch = useDispatch();\n\n  const clearHistory = () => {\n    dispatch(clearRequestHistory());\n  };\n\n  const handleClick = clickedNumber => {\n    dispatch(updateSelectedNumber(clickedNumber));\n\n    dispatch(fetchInfo(clickedNumber));\n  };\n  return (\n    <ListWrapper>\n      <ListHeader>Історія пошуку</ListHeader>\n      <ListEl requestHistory={requestHistory}>\n        {requestHistory.map(item => {\n          return (\n            <ListItem key={nanoid()}>\n              <div\n                onClick={() => {\n                  handleClick(item);\n                }}\n              >\n                {item}\n              </div>\n            </ListItem>\n          );\n        })}\n      </ListEl>\n      {requestHistory.length !== 0 && (\n        <ClearButton\n          type=\"button\"\n          onClick={() => {\n            clearHistory();\n          }}\n        >\n          Очистити історію\n        </ClearButton>\n      )}\n    </ListWrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchInfo } from 'redux/operations';\nimport { selectError, selectSelectedNumber } from 'redux/selectors';\n\nimport { Formik, useFormikContext } from 'formik';\n\nimport {\n  FormEl,\n  InputEl,\n  SubmitButton,\n  Error,\n  InfoError,\n  InputWrapper,\n} from 'components/SearchForm/SearchForm.styled';\n\nimport * as yup from 'yup';\nimport { useEffect } from 'react';\n\nconst schema = yup.object().shape({\n  ttnNumber: yup\n    .string()\n    .matches(/^\\d{14}$/, 'Введіть 14 цифр')\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n\nconst initialValues = {\n  ttnNumber: '',\n};\n\nconst TtnInput = () => {\n  const { setFieldValue } = useFormikContext();\n\n  const ttnSelectedNumber = useSelector(selectSelectedNumber);\n\n  useEffect(() => {\n    setFieldValue('ttnNumber', ttnSelectedNumber);\n  }, [ttnSelectedNumber, setFieldValue]);\n\n  return (\n    <>\n      <InputEl type=\"text\" name=\"ttnNumber\" placeholder=\"Введіть номер ТТН\" />\n      <Error name=\"ttnNumber\" component=\"div\" />\n    </>\n  );\n};\n\nexport const SearchForm = () => {\n  const dispatch = useDispatch();\n  let error = useSelector(selectError);\n\n  const handleSubmit = values => {\n    dispatch(fetchInfo(values.ttnNumber));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl>\n        <InputWrapper>\n          <TtnInput />\n          <InfoError error={error}>Невірний номер ТТН</InfoError>\n        </InputWrapper>\n        <SubmitButton type=\"submit\">Отримати статус</SubmitButton>\n      </FormEl>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InfoWrapper = styled.div`\n  @media screen and (min-width: 900px) {\n    display: flex;\n    justify-content: center;\n    padding-top: 30px;\n  }\n`;\n","import { InfoCard } from 'components/InfoCard/InfoCard';\nimport { RequestHistory } from 'components/RequestHistory/RequestHistory';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nimport { InfoWrapper } from 'pages/CheckTtn/CheckTtn.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { selectIsLoading } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nexport default function CheckTtn() {\n  const isLoading = useSelector(selectIsLoading);\n  return (\n    <>\n      <SearchForm />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <InfoWrapper>\n          <InfoCard />\n          <RequestHistory />\n        </InfoWrapper>\n      )}\n    </>\n  );\n}\n","export const selectInfo = state => state.info.ttnInfo;\n\nexport const selectError = state => state.info.infoError;\n\nexport const selectNumbersList = state => state.info.ttnNumbersList;\n\nexport const selectSelectedNumber = state => state.info.selectedNumber;\n\nexport const selectDepartmentsList = state => state.info.departmentsList;\n\nexport const selectDepartmentsError = state => state.info.departmentsError;\n\nexport const selectPage = state => state.info.page;\n\nexport const selectCity = state => state.info.city;\n\nexport const selectTotalCount = state => state.info.totalCount;\n\nexport const selectIsLoading = state => state.info.isLoading;\n"],"names":["Spinner","styled","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","FormEl","Form","InputWrapper","InputEl","Field","SubmitButton","Error","ErrorMessage","InfoError","props","error","InfoWrapper","InfoEl","InfoElContent","InfoCard","cargoInfo","useSelector","selectInfo","Status","StatusCode","WarehouseRecipient","WarehouseSender","CitySender","CityRecipient","ListWrapper","ListHeader","ListEl","requestHistory","length","ListItem","ClearButton","RequestHistory","selectNumbersList","dispatch","useDispatch","map","item","onClick","clickedNumber","updateSelectedNumber","fetchInfo","nanoid","type","clearRequestHistory","schema","yup","shape","ttnNumber","matches","required","initialValues","TtnInput","setFieldValue","useFormikContext","ttnSelectedNumber","selectSelectedNumber","useEffect","name","placeholder","component","SearchForm","selectError","validationSchema","onSubmit","values","CheckTtn","isLoading","selectIsLoading","state","info","ttnInfo","infoError","ttnNumbersList","selectedNumber","selectDepartmentsList","departmentsList","selectDepartmentsError","departmentsError","selectPage","page","selectCity","city","selectTotalCount","totalCount"],"sourceRoot":""}