{"version":3,"file":"static/js/663.3b72ed47.chunk.js","mappings":"4MAAaA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,OAAf,EAIlBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,cAAf,EAEzBC,EAAuB,SAAAL,GAAK,OAAIA,EAAMC,KAAKK,cAAf,E,mBCA5BC,EAAW,WACtB,OACEC,EAAAA,EAAAA,IAAYT,GADNU,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,mBAAoBC,EAApC,EAAoCA,gBAE9BC,GAAiBJ,EAAAA,EAAAA,IAAYL,GAE7BU,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,oHAEGL,MAEH,iGAEGE,MAEH,+EAEGD,MAEH,uEAEGE,EAAeG,KAAI,SAAAC,GAClB,OACE,eAEEC,QAAS,WAzBD,IAAAC,IA0BMF,EAzBxBH,GAASM,EAAAA,EAAAA,IAAqBD,IAE9BL,GAASO,EAAAA,EAAAA,GAAUF,GAwBR,EAJH,SAMGF,GALIA,EAQV,SAIR,E,8BCzCKK,EAASC,EAAAA,KAAaC,MAAM,CAChCC,UAAWF,EAAAA,KAQRG,aAGCC,EAAgB,CACpBF,UAAW,IAGPG,EAAW,WACf,IAAQC,GAAkBC,EAAAA,EAAAA,MAAlBD,cACFE,GAAoBtB,EAAAA,EAAAA,IAAYH,GAMtC,OAJA0B,EAAAA,EAAAA,YAAU,WACRH,EAAc,YAAaE,EAC5B,GAAE,CAACA,EAAmBF,KAGrB,iCACE,SAAC,KAAD,CAAOI,KAAK,SAASC,KAAK,YAAYC,YAAY,kGAClD,SAAC,KAAD,CAAcD,KAAK,OAAOE,UAAU,UAGzC,EAEYC,EAAa,WACxB,IAAMvB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEY,cAAeA,EACfW,iBAAkBhB,EAClBiB,SARiB,SAAAC,GACnB1B,GAASO,EAAAA,EAAAA,GAAUmB,EAAOf,WAC3B,EAGC,UAKE,UAAC,KAAD,YACE,SAACG,EAAD,KAEA,6IAIP,ECzDc,SAASa,IACtB,OACE,iCACE,SAACJ,EAAD,KACA,SAAC7B,EAAD,MAGL,C","sources":["redux/selectors.js","components/InfoCard/InfoCard.jsx","components/SearchForm/SearchForm.jsx","pages/CheckTtn/CheckTtn.jsx"],"sourcesContent":["export const selectInfo = state => state.info.ttnInfo;\n\nexport const selectError = state => state.info.infoError;\n\nexport const selectNumbersList = state => state.info.ttnNumbersList;\n\nexport const selectSelectedNumber = state => state.info.selectedNumber;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchInfo } from 'redux/operations';\nimport { selectInfo, selectNumbersList } from 'redux/selectors';\n\nimport { updateSelectedNumber } from 'redux/slice';\n\nexport const InfoCard = () => {\n  const { Status, WarehouseRecipient, WarehouseSender } =\n    useSelector(selectInfo);\n  const requestHistory = useSelector(selectNumbersList);\n\n  const dispatch = useDispatch();\n\n  const handleClick = clickedNumber => {\n    dispatch(updateSelectedNumber(clickedNumber));\n\n    dispatch(fetchInfo(clickedNumber));\n  };\n  return (\n    <>\n      <div>\n        Статус доставки:\n        {Status}\n      </div>\n      <div>\n        Відправлено:\n        {WarehouseSender}\n      </div>\n      <div>\n        Отримано:\n        {WarehouseRecipient}\n      </div>\n      <ul>\n        Історія\n        {requestHistory.map(item => {\n          return (\n            <li\n              key={item}\n              onClick={() => {\n                handleClick(item);\n              }}\n            >\n              {item}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchInfo } from 'redux/operations';\nimport { selectSelectedNumber } from 'redux/selectors';\n\nimport { Formik, Form, Field, ErrorMessage, useFormikContext } from 'formik';\nimport * as yup from 'yup';\nimport { useEffect } from 'react';\n\nconst schema = yup.object().shape({\n  ttnNumber: yup\n    .string()\n    // .min(4)\n    // .max(10)\n    // .matches(\n    //   /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n    //   'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    // )\n    .required(),\n});\n\nconst initialValues = {\n  ttnNumber: '',\n};\n\nconst TtnInput = () => {\n  const { setFieldValue } = useFormikContext();\n  const ttnSelectedNumber = useSelector(selectSelectedNumber);\n\n  useEffect(() => {\n    setFieldValue('ttnNumber', ttnSelectedNumber);\n  }, [ttnSelectedNumber, setFieldValue]);\n\n  return (\n    <>\n      <Field type=\"number\" name=\"ttnNumber\" placeholder=\"Введіть номер ТТН\" />\n      <ErrorMessage name=\"name\" component=\"div\" />\n    </>\n  );\n};\n\nexport const SearchForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    dispatch(fetchInfo(values.ttnNumber));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <TtnInput />\n\n        <button>Отримати статус ТТН</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { InfoCard } from 'components/InfoCard/InfoCard';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nexport default function CheckTtn() {\n  return (\n    <>\n      <SearchForm />\n      <InfoCard />\n    </>\n  );\n}\n"],"names":["selectInfo","state","info","ttnInfo","selectNumbersList","ttnNumbersList","selectSelectedNumber","selectedNumber","InfoCard","useSelector","Status","WarehouseRecipient","WarehouseSender","requestHistory","dispatch","useDispatch","map","item","onClick","clickedNumber","updateSelectedNumber","fetchInfo","schema","yup","shape","ttnNumber","required","initialValues","TtnInput","setFieldValue","useFormikContext","ttnSelectedNumber","useEffect","type","name","placeholder","component","SearchForm","validationSchema","onSubmit","values","CheckTtn"],"sourceRoot":""}